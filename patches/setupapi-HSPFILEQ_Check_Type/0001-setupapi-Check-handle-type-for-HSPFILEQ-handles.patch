From d666027358311859a5d245893840a5b752f2e2cc Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Michael=20M=C3=BCller?= <michael@fds-team.de>
Date: Fri, 27 Nov 2015 21:28:50 +0100
Subject: [PATCH] setupapi: Check handle type for HSPFILEQ handles.

---
 dlls/setupapi/queue.c | 87 +++++++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 87 insertions(+)

diff --git a/dlls/setupapi/queue.c b/dlls/setupapi/queue.c
index c065c6e..e0d3dc5 100644
--- a/dlls/setupapi/queue.c
+++ b/dlls/setupapi/queue.c
@@ -77,8 +77,11 @@ struct file_op_queue
     unsigned int count;
 };
 
+#define SETUP_FILE_QUEUE_MAGIC 0x51465053 /* "SPFQ" */
+
 struct file_queue
 {
+    DWORD magic;
     struct file_op_queue copy_queue;
     struct file_op_queue delete_queue;
     struct file_op_queue rename_queue;
@@ -434,6 +437,7 @@ HSPFILEQ WINAPI SetupOpenFileQueue(void)
 
     if (!(queue = HeapAlloc( GetProcessHeap(), HEAP_ZERO_MEMORY, sizeof(*queue))))
         return INVALID_HANDLE_VALUE;
+    queue->magic = SETUP_FILE_QUEUE_MAGIC;
     return queue;
 }
 
@@ -446,6 +450,13 @@ BOOL WINAPI SetupCloseFileQueue( HSPFILEQ handle )
     struct file_queue *queue = handle;
     unsigned int i;
 
+    if (!queue || queue->magic != SETUP_FILE_QUEUE_MAGIC)
+    {
+        SetLastError(ERROR_INVALID_HANDLE);
+        return FALSE;
+    }
+
+    queue->magic = 0;
     free_file_op_queue( &queue->copy_queue );
     free_file_op_queue( &queue->rename_queue );
     free_file_op_queue( &queue->delete_queue );
@@ -535,6 +546,12 @@ BOOL WINAPI SetupQueueCopyIndirectW( PSP_FILE_COPY_PARAMS_W params )
     struct file_queue *queue = params->QueueHandle;
     struct file_op *op;
 
+    if (!queue || queue->magic != SETUP_FILE_QUEUE_MAGIC)
+    {
+        SetLastError(ERROR_INVALID_HANDLE);
+        return FALSE;
+    }
+
     if (!(op = HeapAlloc( GetProcessHeap(), 0, sizeof(*op) ))) return FALSE;
     op->style      = params->CopyStyle;
     op->src_path   = strdupW( params->SourcePath );
@@ -681,6 +698,12 @@ BOOL WINAPI SetupQueueDeleteA( HSPFILEQ handle, PCSTR part1, PCSTR part2 )
     struct file_queue *queue = handle;
     struct file_op *op;
 
+    if (!queue || queue->magic != SETUP_FILE_QUEUE_MAGIC)
+    {
+        SetLastError(ERROR_INVALID_HANDLE);
+        return FALSE;
+    }
+
     if (!(op = heap_alloc_zero( sizeof(*op) ))) return FALSE;
     op->dst_path = strdupAtoW( part1 );
     op->dst_file = strdupAtoW( part2 );
@@ -697,6 +720,12 @@ BOOL WINAPI SetupQueueDeleteW( HSPFILEQ handle, PCWSTR part1, PCWSTR part2 )
     struct file_queue *queue = handle;
     struct file_op *op;
 
+    if (!queue || queue->magic != SETUP_FILE_QUEUE_MAGIC)
+    {
+        SetLastError(ERROR_INVALID_HANDLE);
+        return FALSE;
+    }
+
     if (!(op = heap_alloc_zero( sizeof(*op) ))) return FALSE;
     op->dst_path = strdupW( part1 );
     op->dst_file = strdupW( part2 );
@@ -714,6 +743,12 @@ BOOL WINAPI SetupQueueRenameA( HSPFILEQ handle, PCSTR SourcePath, PCSTR SourceFi
     struct file_queue *queue = handle;
     struct file_op *op;
 
+    if (!queue || queue->magic != SETUP_FILE_QUEUE_MAGIC)
+    {
+        SetLastError(ERROR_INVALID_HANDLE);
+        return FALSE;
+    }
+
     if (!(op = heap_alloc_zero( sizeof(*op) ))) return FALSE;
     op->src_path = strdupAtoW( SourcePath );
     op->src_file = strdupAtoW( SourceFilename );
@@ -733,6 +768,12 @@ BOOL WINAPI SetupQueueRenameW( HSPFILEQ handle, PCWSTR SourcePath, PCWSTR Source
     struct file_queue *queue = handle;
     struct file_op *op;
 
+    if (!queue || queue->magic != SETUP_FILE_QUEUE_MAGIC)
+    {
+        SetLastError(ERROR_INVALID_HANDLE);
+        return FALSE;
+    }
+
     if (!(op = heap_alloc_zero( sizeof(*op) ))) return FALSE;
     op->src_path = strdupW( SourcePath );
     op->src_file = strdupW( SourceFilename );
@@ -1310,6 +1351,12 @@ BOOL WINAPI SetupCommitFileQueueW( HWND owner, HSPFILEQ handle, PSP_FILE_CALLBAC
 
     paths.Source = paths.Target = NULL;
 
+    if (!queue || queue->magic != SETUP_FILE_QUEUE_MAGIC)
+    {
+        SetLastError(ERROR_INVALID_HANDLE);
+        return FALSE;
+    }
+
     if (!queue->copy_queue.count && !queue->delete_queue.count && !queue->rename_queue.count)
         return TRUE;  /* nothing to do */
 
@@ -1515,6 +1562,12 @@ BOOL WINAPI SetupScanFileQueueW( HSPFILEQ handle, DWORD flags, HWND window,
 
     TRACE("%p %x %p %p %p %p\n", handle, flags, window, handler, context, result);
 
+    if (!queue || queue->magic != SETUP_FILE_QUEUE_MAGIC)
+    {
+        SetLastError(ERROR_INVALID_HANDLE);
+        return FALSE;
+    }
+
     if (!queue->copy_queue.count) return TRUE;
 
     if (flags & SPQ_SCAN_USE_CALLBACK)        notification = SPFILENOTIFY_QUEUESCAN;
@@ -1561,6 +1614,12 @@ BOOL WINAPI SetupGetFileQueueCount( HSPFILEQ handle, UINT op, PUINT result )
 {
     struct file_queue *queue = handle;
 
+    if (!queue || queue->magic != SETUP_FILE_QUEUE_MAGIC)
+    {
+        SetLastError(ERROR_INVALID_HANDLE);
+        return FALSE;
+    }
+
     switch(op)
     {
     case FILEOP_COPY:
@@ -1583,6 +1642,13 @@ BOOL WINAPI SetupGetFileQueueCount( HSPFILEQ handle, UINT op, PUINT result )
 BOOL WINAPI SetupGetFileQueueFlags( HSPFILEQ handle, PDWORD flags )
 {
     struct file_queue *queue = handle;
+
+    if (!queue || queue->magic != SETUP_FILE_QUEUE_MAGIC)
+    {
+        SetLastError(ERROR_INVALID_HANDLE);
+        return FALSE;
+    }
+
     *flags = queue->flags;
     return TRUE;
 }
@@ -1594,6 +1660,13 @@ BOOL WINAPI SetupGetFileQueueFlags( HSPFILEQ handle, PDWORD flags )
 BOOL WINAPI SetupSetFileQueueFlags( HSPFILEQ handle, DWORD mask, DWORD flags )
 {
     struct file_queue *queue = handle;
+
+    if (!queue || queue->magic != SETUP_FILE_QUEUE_MAGIC)
+    {
+        SetLastError(ERROR_INVALID_HANDLE);
+        return FALSE;
+    }
+
     queue->flags = (queue->flags & ~mask) | flags;
     return TRUE;
 }
@@ -1875,6 +1948,13 @@ UINT WINAPI SetupCopyErrorW( HWND parent, PCWSTR dialogTitle, PCWSTR diskname,
 DWORD WINAPI pSetupGetQueueFlags( HSPFILEQ handle )
 {
     struct file_queue *queue = handle;
+
+    if (!queue || queue->magic != SETUP_FILE_QUEUE_MAGIC)
+    {
+        SetLastError(ERROR_INVALID_HANDLE);
+        return FALSE;
+    }
+
     return queue->flags;
 }
 
@@ -1884,6 +1964,13 @@ DWORD WINAPI pSetupGetQueueFlags( HSPFILEQ handle )
 BOOL WINAPI pSetupSetQueueFlags( HSPFILEQ handle, DWORD flags )
 {
     struct file_queue *queue = handle;
+
+    if (!queue || queue->magic != SETUP_FILE_QUEUE_MAGIC)
+    {
+        SetLastError(ERROR_INVALID_HANDLE);
+        return FALSE;
+    }
+
     queue->flags = flags;
     return TRUE;
 }
-- 
1.9.1

