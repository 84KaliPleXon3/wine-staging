From 4cf7d2d6cdb9836ef549bcb5fcb1764e587ff01f Mon Sep 17 00:00:00 2001
From: Sebastian Lackner <sebastian@fds-team.de>
Date: Fri, 27 Mar 2015 15:32:04 +0100
Subject: Revert "advapi32: Add DACL inheritance support in SetSecurityInfo."

This reverts commit f974d726720eff4fcd7371bca95e6cdcc4b4a848.
---
 dlls/advapi32/security.c       | 130 +----------------------------------------
 dlls/advapi32/tests/security.c |  27 +++++----
 2 files changed, 16 insertions(+), 141 deletions(-)

diff --git a/dlls/advapi32/security.c b/dlls/advapi32/security.c
index 71a8c92..e8cdcc5 100644
--- a/dlls/advapi32/security.c
+++ b/dlls/advapi32/security.c
@@ -4052,8 +4052,6 @@ DWORD WINAPI SetNamedSecurityInfoW(LPWSTR pObjectName,
         }
         break;
     case SE_FILE_OBJECT:
-        if (SecurityInfo & DACL_SECURITY_INFORMATION)
-            access |= READ_CONTROL;
         if (!(err = get_security_file( pObjectName, access, &handle )))
         {
             err = SetSecurityInfo( handle, ObjectType, SecurityInfo, psidOwner, psidGroup, pDacl, pSacl );
@@ -5731,7 +5729,6 @@ DWORD WINAPI SetSecurityInfo(HANDLE handle, SE_OBJECT_TYPE ObjectType,
                       PSID psidGroup, PACL pDacl, PACL pSacl)
 {
     SECURITY_DESCRIPTOR sd;
-    PACL dacl = pDacl;
     NTSTATUS status;
 
     if (!InitializeSecurityDescriptor(&sd, SECURITY_DESCRIPTOR_REVISION))
@@ -5742,130 +5739,7 @@ DWORD WINAPI SetSecurityInfo(HANDLE handle, SE_OBJECT_TYPE ObjectType,
     if (SecurityInfo & GROUP_SECURITY_INFORMATION)
         SetSecurityDescriptorGroup(&sd, psidGroup, FALSE);
     if (SecurityInfo & DACL_SECURITY_INFORMATION)
-    {
-        if (ObjectType == SE_FILE_OBJECT)
-        {
-            SECURITY_DESCRIPTOR_CONTROL control;
-            PSECURITY_DESCRIPTOR psd;
-            OBJECT_NAME_INFORMATION *name_info;
-            DWORD size, rev;
-
-            status = NtQuerySecurityObject(handle, SecurityInfo, NULL, 0, &size);
-            if (status != STATUS_BUFFER_TOO_SMALL)
-                return RtlNtStatusToDosError(status);
-
-            psd = heap_alloc(size);
-            if (!psd)
-                return ERROR_NOT_ENOUGH_MEMORY;
-
-            status = NtQuerySecurityObject(handle, SecurityInfo, psd, size, &size);
-            if (status)
-            {
-                heap_free(psd);
-                return RtlNtStatusToDosError(status);
-            }
-
-            status = RtlGetControlSecurityDescriptor(psd, &control, &rev);
-            heap_free(psd);
-            if (status)
-                return RtlNtStatusToDosError(status);
-            /* TODO: copy some control flags to new sd */
-
-            /* inherit parent directory DACL */
-            if (!(control & SE_DACL_PROTECTED))
-            {
-                status = NtQueryObject(handle, ObjectNameInformation, NULL, 0, &size);
-                if (status != STATUS_INFO_LENGTH_MISMATCH)
-                    return RtlNtStatusToDosError(status);
-
-                name_info = heap_alloc(size);
-                if (!name_info)
-                    return ERROR_NOT_ENOUGH_MEMORY;
-
-                status = NtQueryObject(handle, ObjectNameInformation, name_info, size, NULL);
-                if (status)
-                {
-                    heap_free(name_info);
-                    return RtlNtStatusToDosError(status);
-                }
-
-                for (name_info->Name.Length-=2; name_info->Name.Length>0; name_info->Name.Length-=2)
-                    if (name_info->Name.Buffer[name_info->Name.Length/2-1]=='\\' ||
-                            name_info->Name.Buffer[name_info->Name.Length/2-1]=='/')
-                        break;
-                if (name_info->Name.Length)
-                {
-                    OBJECT_ATTRIBUTES attr;
-                    IO_STATUS_BLOCK io;
-                    HANDLE parent;
-                    PSECURITY_DESCRIPTOR parent_sd;
-                    ACL *parent_dacl;
-                    DWORD err = ERROR_ACCESS_DENIED;
-
-                    name_info->Name.Buffer[name_info->Name.Length/2] = 0;
-
-                    attr.Length = sizeof(attr);
-                    attr.RootDirectory = 0;
-                    attr.Attributes = 0;
-                    attr.ObjectName = &name_info->Name;
-                    attr.SecurityDescriptor = NULL;
-                    status = NtOpenFile(&parent, READ_CONTROL, &attr, &io,
-                            FILE_SHARE_READ|FILE_SHARE_WRITE|FILE_SHARE_DELETE,
-                            FILE_OPEN_FOR_BACKUP_INTENT);
-                    heap_free(name_info);
-                    if (!status)
-                    {
-                        err = GetSecurityInfo(parent, SE_FILE_OBJECT, DACL_SECURITY_INFORMATION,
-                                NULL, NULL, &parent_dacl, NULL, &parent_sd);
-                        CloseHandle(parent);
-                    }
-
-                    if (!err)
-                    {
-                        int i;
-
-                        dacl = heap_alloc_zero(pDacl->AclSize+parent_dacl->AclSize);
-                        if (!dacl)
-                        {
-                            LocalFree(parent_sd);
-                            return ERROR_NOT_ENOUGH_MEMORY;
-                        }
-                        memcpy(dacl, pDacl, pDacl->AclSize);
-                        dacl->AclSize = pDacl->AclSize+parent_dacl->AclSize;
-
-                        for (i=0; i<parent_dacl->AceCount; i++)
-                        {
-                            ACE_HEADER *ace;
-
-                            if (!GetAce(parent_dacl, i, (void*)&ace))
-                                continue;
-                            if (!(ace->AceFlags & (OBJECT_INHERIT_ACE|CONTAINER_INHERIT_ACE)))
-                                continue;
-                            if ((ace->AceFlags & (OBJECT_INHERIT_ACE|CONTAINER_INHERIT_ACE)) !=
-                                    (OBJECT_INHERIT_ACE|CONTAINER_INHERIT_ACE))
-                            {
-                                FIXME("unsupported flags: %x\n", ace->AceFlags);
-                                continue;
-                            }
-
-                            if (ace->AceFlags & NO_PROPAGATE_INHERIT_ACE)
-                                ace->AceFlags &= ~(OBJECT_INHERIT_ACE|CONTAINER_INHERIT_ACE|NO_PROPAGATE_INHERIT_ACE);
-                            ace->AceFlags &= ~INHERIT_ONLY_ACE;
-                            ace->AceFlags |= INHERITED_ACE;
-
-                            if(!AddAce(dacl, ACL_REVISION, MAXDWORD, ace, ace->AceSize))
-                                WARN("error adding inherited ACE\n");
-                        }
-                        LocalFree(parent_sd);
-                    }
-                }
-                else
-                    heap_free(name_info);
-            }
-        }
-
-        SetSecurityDescriptorDacl(&sd, TRUE, dacl, FALSE);
-    }
+        SetSecurityDescriptorDacl(&sd, TRUE, pDacl, FALSE);
     if (SecurityInfo & SACL_SECURITY_INFORMATION)
         SetSecurityDescriptorSacl(&sd, TRUE, pSacl, FALSE);
 
@@ -5879,8 +5753,6 @@ DWORD WINAPI SetSecurityInfo(HANDLE handle, SE_OBJECT_TYPE ObjectType,
         status = NtSetSecurityObject(handle, SecurityInfo, &sd);
         break;
     }
-    if (dacl != pDacl)
-        heap_free(dacl);
     return RtlNtStatusToDosError(status);
 }
 
diff --git a/dlls/advapi32/tests/security.c b/dlls/advapi32/tests/security.c
index c256753..c0d518f 100644
--- a/dlls/advapi32/tests/security.c
+++ b/dlls/advapi32/tests/security.c
@@ -3416,22 +3416,25 @@ static void test_GetNamedSecurityInfoA(void)
 
     error = pGetNamedSecurityInfoA(tmpfile, SE_FILE_OBJECT, DACL_SECURITY_INFORMATION,
             NULL, NULL, &pDacl, NULL, &pSD);
-    ok(!error, "GetNamedSecurityInfo failed with error %d\n", error);
+    todo_wine ok(!error, "GetNamedSecurityInfo failed with error %d\n", error);
 
-    bret = pGetAclInformation(pDacl, &acl_size, sizeof(acl_size), AclSizeInformation);
-    ok(bret, "GetAclInformation failed\n");
-    if (acl_size.AceCount > 0)
+    if (!error)
     {
-        bret = pGetAce(pDacl, 0, (VOID **)&ace);
-        ok(bret, "Failed to get ACE.\n");
-        ok(((ACE_HEADER *)ace)->AceFlags & INHERITED_ACE,
-           "ACE has unexpected flags: 0x%x\n", ((ACE_HEADER *)ace)->AceFlags);
+        bret = pGetAclInformation(pDacl, &acl_size, sizeof(acl_size), AclSizeInformation);
+        ok(bret, "GetAclInformation failed\n");
+        if (acl_size.AceCount > 0)
+        {
+            bret = pGetAce(pDacl, 0, (VOID **)&ace);
+            ok(bret, "Failed to get ACE.\n");
+            ok(((ACE_HEADER *)ace)->AceFlags & INHERITED_ACE,
+                    "ACE has unexpected flags: 0x%x\n", ((ACE_HEADER *)ace)->AceFlags);
+        }
+        LocalFree(pSD);
     }
-    LocalFree(pSD);
 
     h = CreateFileA(tmpfile, GENERIC_READ, FILE_SHARE_DELETE|FILE_SHARE_WRITE|FILE_SHARE_READ,
             NULL, OPEN_EXISTING, 0, NULL);
-    ok(h != INVALID_HANDLE_VALUE, "CreateFile error %d\n", GetLastError());
+    todo_wine ok(h != INVALID_HANDLE_VALUE, "CreateFile error %d\n", GetLastError());
     CloseHandle(h);
 
     /* NtSetSecurityObject doesn't inherit DACL entries */
@@ -4147,7 +4150,7 @@ static void test_GetSecurityInfo(void)
         bret = pGetAce(pDacl, 0, (VOID **)&ace);
         ok(bret, "Failed to get Current User ACE.\n");
         bret = EqualSid(&ace->SidStart, user_sid);
-        todo_wine ok(bret, "Current User ACE != Current User SID.\n");
+        ok(bret, "Current User ACE != Current User SID.\n");
         ok(((ACE_HEADER *)ace)->AceFlags == 0,
            "Current User ACE has unexpected flags (0x%x != 0x0)\n", ((ACE_HEADER *)ace)->AceFlags);
         ok(ace->Mask == 0x1f01ff, "Current User ACE has unexpected mask (0x%x != 0x1f01ff)\n",
@@ -4158,7 +4161,7 @@ static void test_GetSecurityInfo(void)
         bret = pGetAce(pDacl, 1, (VOID **)&ace);
         ok(bret, "Failed to get Administators Group ACE.\n");
         bret = EqualSid(&ace->SidStart, admin_sid);
-        todo_wine ok(bret, "Administators Group ACE != Administators Group SID.\n");
+        ok(bret, "Administators Group ACE != Administators Group SID.\n");
         ok(((ACE_HEADER *)ace)->AceFlags == 0,
            "Administators Group ACE has unexpected flags (0x%x != 0x0)\n", ((ACE_HEADER *)ace)->AceFlags);
         ok(ace->Mask == 0x1f01ff, "Administators Group ACE has unexpected mask (0x%x != 0x1f01ff)\n",
-- 
2.3.3

